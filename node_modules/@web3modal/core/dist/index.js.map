{"version":3,"file":"index.js","sources":["../src/controllers/ClientCtrl.ts","../src/controllers/RouterCtrl.ts","../src/utils/CoreUtil.ts","../src/controllers/EventsCtrl.ts","../src/controllers/OptionsCtrl.ts","../src/controllers/ConfigCtrl.ts","../src/controllers/AccountCtrl.ts","../src/utils/ExplorerUtil.ts","../src/controllers/ExplorerCtrl.ts","../src/controllers/WcConnectionCtrl.ts","../src/controllers/ModalCtrl.ts","../src/controllers/ThemeCtrl.ts","../src/controllers/ToastCtrl.ts","../src/utils/PolyfillUtil.ts"],"sourcesContent":["import type { ClientCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nlet client: ClientCtrlState['ethereumClient'] = undefined\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  ethereumClient: undefined,\n\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    client = ethereumClient\n  },\n\n  client() {\n    if (client) {\n      return client\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  W3M_VERSION: 'W3M_VERSION',\n\n  W3M_PREFER_INJECTED_URL_FLAG: 'w3mPreferInjected',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setWeb3ModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.W3M_VERSION, process.env.ROLLUP_W3M_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  },\n\n  getSwitchNetworkRouterData() {\n    const routerData = RouterCtrl.state.data?.SwitchNetwork\n    if (!routerData) {\n      throw new Error('Missing \"SwitchNetwork\" view data')\n    }\n\n    return routerData\n  },\n\n  isPreferInjectedFlag() {\n    if (typeof location !== 'undefined') {\n      const queryParams = new URLSearchParams(location.search)\n\n      return queryParams.has(CoreUtil.W3M_PREFER_INJECTED_URL_FLAG)\n    }\n\n    return false\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChain: undefined,\n  chains: undefined,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false,\n  isPreferInjected: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  getSelectedChain() {\n    const selectedChain = ClientCtrl.client().getNetwork().chain\n    if (selectedChain) {\n      state.selectedChain = selectedChain\n    }\n\n    return state.selectedChain\n  },\n\n  setSelectedChain(selectedChain: OptionsCtrlState['selectedChain']) {\n    state.selectedChain = selectedChain\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsPreferInjected(isPreferInjected: OptionsCtrlState['isPreferInjected']) {\n    state.isPreferInjected = isPreferInjected\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ClientCtrl } from './ClientCtrl'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  tokenImages: undefined,\n  tokenContracts: undefined,\n  enableNetworkView: false,\n  enableAccountView: true,\n  enableExplorer: true,\n  defaultChain: undefined,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setChains(ClientCtrl.client().chains)\n    OptionsCtrl.setIsPreferInjected(\n      ClientCtrl.client().isInjectedProviderInstalled() && CoreUtil.isPreferInjectedFlag()\n    )\n\n    if (config.defaultChain) {\n      OptionsCtrl.setSelectedChain(config.defaultChain)\n    }\n\n    CoreUtil.setWeb3ModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { AccountCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<AccountCtrlState>({\n  address: undefined,\n  profileName: undefined,\n  profileAvatar: undefined,\n  profileLoading: false,\n  balanceLoading: false,\n  balance: undefined,\n  isConnected: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const AccountCtrl = {\n  state,\n\n  subscribe(callback: (newState: AccountCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  getAccount() {\n    const account = ClientCtrl.client().getAccount()\n    state.address = account.address\n    state.isConnected = account.isConnected\n  },\n\n  async fetchProfile(\n    preloadAvatarFn: (avatar: string) => Promise<unknown>,\n    profileAddress?: `0x${string}`\n  ) {\n    try {\n      state.profileLoading = true\n      const address = profileAddress ?? state.address\n      const isMainnetConfigured = OptionsCtrl.state.chains?.find(chain => chain.id === 1)\n      if (address && isMainnetConfigured) {\n        const name = await ClientCtrl.client().fetchEnsName({ address, chainId: 1 })\n        if (name) {\n          const avatar = await ClientCtrl.client().fetchEnsAvatar({ name, chainId: 1 })\n          if (avatar) {\n            await preloadAvatarFn(avatar)\n          }\n          state.profileAvatar = avatar\n        }\n        state.profileName = name\n      }\n    } finally {\n      state.profileLoading = false\n    }\n  },\n\n  async fetchBalance(balanceAddress?: `0x${string}`) {\n    try {\n      const { chain } = ClientCtrl.client().getNetwork()\n      const { tokenContracts } = ConfigCtrl.state\n      let token: `0x${string}` | undefined = undefined\n      if (chain && tokenContracts) {\n        token = tokenContracts[chain.id] as `0x${string}`\n      }\n      state.balanceLoading = true\n      const address = balanceAddress ?? state.address\n      if (address) {\n        const balance = await ClientCtrl.client().fetchBalance({ address, token })\n        state.balance = { amount: balance.formatted, symbol: balance.symbol }\n      }\n    } finally {\n      state.balanceLoading = false\n    }\n  },\n\n  setAddress(address: AccountCtrlState['address']) {\n    state.address = address\n  },\n\n  setIsConnected(isConnected: AccountCtrlState['isConnected']) {\n    state.isConnected = isConnected\n  },\n\n  resetBalance() {\n    state.balance = undefined\n  },\n\n  resetAccount() {\n    state.address = undefined\n    state.isConnected = false\n    state.profileName = undefined\n    state.profileAvatar = undefined\n    state.balance = undefined\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(params).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  injectedWallets: [],\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  async getInjectedWallets() {\n    const { listings: listingsObj } = await ExplorerUtil.getInjectedListings({})\n    const listings = Object.values(listingsObj)\n    state.injectedWallets = listings\n\n    return state.injectedWallets\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { WcConnectionCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<WcConnectionCtrlState>({\n  pairingEnabled: false,\n  pairingUri: '',\n  pairingError: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const WcConnectionCtrl = {\n  state,\n\n  subscribe(callback: (newState: WcConnectionCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setPairingUri(pairingUri: WcConnectionCtrlState['pairingUri']) {\n    state.pairingUri = pairingUri\n  },\n\n  setPairingError(pairingError: WcConnectionCtrlState['pairingError']) {\n    state.pairingError = pairingError\n  },\n\n  setPairingEnabled(pairingEnabled: WcConnectionCtrlState['pairingEnabled']) {\n    state.pairingEnabled = pairingEnabled\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { AccountCtrl } from './AccountCtrl'\nimport { ClientCtrl } from './ClientCtrl'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\nimport { WcConnectionCtrl } from './WcConnectionCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  route?: 'Account' | 'ConnectWallet' | 'Help' | 'SelectNetwork'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded, isPreferInjected, selectedChain } = OptionsCtrl.state\n      const { isConnected } = AccountCtrl.state\n      const { enableNetworkView } = ConfigCtrl.state\n      WcConnectionCtrl.setPairingEnabled(true)\n\n      if (options?.route) {\n        RouterCtrl.reset(options.route)\n      } else if (isConnected) {\n        RouterCtrl.reset('Account')\n      } else if (enableNetworkView) {\n        RouterCtrl.reset('SelectNetwork')\n      } else if (isPreferInjected) {\n        ClientCtrl.client()\n          .connectConnector('injected', selectedChain?.id)\n          .catch(err => console.error(err))\n        resolve()\n\n        return\n      } else {\n        RouterCtrl.reset('ConnectWallet')\n      }\n\n      const { pairingUri } = WcConnectionCtrl.state\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded && (pairingUri || isConnected)) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          const connection = WcConnectionCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded && (connection.pairingUri || isConnected)) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n  if (!window.global) {\n    window.global = window\n  }\n}\n"],"names":["client","ClientCtrl","ethereumClient","state","proxy","RouterCtrl","callback","valtioSub","view","data","last","CoreUtil","ua","url","appUrl","wcUri","name","safeAppUrl","encodedWcUrl","miliseconds","resolve","href","target","e","_a","routerData","isEnabled","EventsCtrl","snapshot","connectedWalletId","event","OptionsCtrl","chains","selectedChain","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","isPreferInjected","ConfigCtrl","config","_b","AccountCtrl","account","preloadAvatarFn","profileAddress","address","isMainnetConfigured","chain","avatar","balanceAddress","tokenContracts","token","balance","isConnected","W3M_API","fetchListings","endpoint","params","key","value","ExplorerUtil","imageId","L","x","y","A","u","s","I","isMobile","ExplorerCtrl","explorerRecommendedWalletIds","explorerExcludedWalletIds","listings","listingsArr","a","b","aIndex","bIndex","isExcluded","extendedParams","__spreadValues","recomendedWallets","wallet","page","search","listingsObj","total","type","WcConnectionCtrl","pairingUri","pairingError","pairingEnabled","ModalCtrl","options","enableNetworkView","err","interval","opts","connection","i","h","c","m","r","t","isDarkMode","ThemeCtrl","theme","themeMode","themeVariables","ToastCtrl","message","variant","Buffer"],"mappings":"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"}