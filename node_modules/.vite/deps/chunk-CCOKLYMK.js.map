{
  "version": 3,
  "sources": ["../../@walletconnect/modal-core/src/controllers/RouterCtrl.ts", "../../@walletconnect/modal-core/src/utils/CoreUtil.ts", "../../@walletconnect/modal-core/src/controllers/EventsCtrl.ts", "../../@walletconnect/modal-core/src/controllers/OptionsCtrl.ts", "../../@walletconnect/modal-core/src/controllers/ConfigCtrl.ts", "../../@walletconnect/modal-core/src/utils/ExplorerUtil.ts", "../../@walletconnect/modal-core/src/controllers/ExplorerCtrl.ts", "../../@walletconnect/modal-core/src/controllers/ModalCtrl.ts", "../../@walletconnect/modal-core/src/controllers/ThemeCtrl.ts", "../../@walletconnect/modal-core/src/controllers/ToastCtrl.ts", "../../@walletconnect/modal-core/src/utils/PolyfillUtil.ts"],
  "sourcesContent": ["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n", "import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    const [href] = wcUri.split('?')\n\n    localStorage.setItem(\n      CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name: 'Android' })\n    )\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  setModalVersionInStorage() {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n", "import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n", "import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(params).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  }\n}\n", "import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (!extendedParams.search) {\n      if (recomendedWallets.length) {\n        extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n      } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n        extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n      }\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n  if (!window.global) {\n    window.global = window\n  }\n}\n"],
  "mappings": "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",
  "names": ["state", "proxy", "RouterCtrl", "callback", "valtioSub", "view", "data", "last", "CoreUtil", "ua", "url", "appUrl", "wcUri", "name", "safeAppUrl", "encodedWcUrl", "miliseconds", "resolve", "href", "target", "_a", "routerData", "isEnabled", "EventsCtrl", "snapshot", "connectedWalletId", "event", "OptionsCtrl", "chains", "walletConnectUri", "isCustomDesktop", "isCustomMobile", "isDataLoaded", "isUiLoaded", "isAuth", "ConfigCtrl", "config", "_b", "W3M_API", "fetchListings", "endpoint", "params", "key", "value", "ExplorerUtil", "imageId", "h", "u", "E", "y", "x", "t", "e", "f", "isMobile", "ExplorerCtrl", "explorerRecommendedWalletIds", "explorerExcludedWalletIds", "listings", "listingsArr", "a", "b", "aIndex", "bIndex", "chainsFilter", "isExcluded", "extendedParams", "__spreadValues", "recomendedWallets", "wallet", "page", "search", "listingsObj", "total", "type", "ModalCtrl", "options", "interval", "opts", "i", "c", "m", "r", "s", "isDarkMode", "ThemeCtrl", "theme", "themeMode", "themeVariables", "ToastCtrl", "message", "variant", "Buffer"]
}
